version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: fylocore-postgres
    environment:
      POSTGRES_DB: fylocore
      POSTGRES_USER: fylocore
      POSTGRES_PASSWORD: fylocore_password
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-extensions.sql:/docker-entrypoint-initdb.d/init-extensions.sql
    networks:
      - fylocore-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U fylocore -d fylocore"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Core Server (Backend API)
  core-server:
    build:
      context: ../../
      dockerfile: deploy/docker/Dockerfile
    ports:
      - "8000:8000"
    env_file:
      - ../../core-server/.env
    environment:
      - NODE_ENV=development
      - PORT=8000
      - DOCKER_ENVIRONMENT=true
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=fylocore
      - DB_USER=fylocore
      - DB_PASSWORD=fylocore_password
    volumes:
      - ../../core-server/logs:/app/logs
      - ../../storage:/app/storage
    networks:
      - fylocore-network
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy

  # Core UI (Frontend)
  core-ui:
    build:
      context: ../../core-ui
      dockerfile: ./Dockerfile.ui
    ports:
      - "3000:3000"
    env_file:
      - ../../core-ui/.env
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - DOCKER_ENVIRONMENT=true
    networks:
      - fylocore-network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  fylocore-network:
    driver: bridge
