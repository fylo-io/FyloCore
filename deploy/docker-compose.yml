version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: fylo-postgres
    environment:
      POSTGRES_DB: fylocore
      POSTGRES_USER: fylocore
      POSTGRES_PASSWORD: fylocore_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U fylocore -d fylocore"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  core-server:
    build:
      context: ../core-server
      dockerfile: Dockerfile
    container_name: fylo-core-server
    ports:
      - "8000:8000"
    environment:
      - NODE_ENV=development
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=fylocore
      - DB_USER=fylocore
      - DB_PASSWORD=fylocore_password
    env_file:
      - ../core-server/.env
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  core-ui:
    build:
      context: ../core-ui
      dockerfile: Dockerfile
      args:
        - NEXT_PUBLIC_API_URL=http://localhost:8000
    container_name: fylo-core-ui
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - DOCKER_ENVIRONMENT=true
    env_file:
      - ../core-ui/.env
    depends_on:
      - core-server
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:

networks:
  default:
    name: fylo-network
